{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loren\\\\Desktop\\\\React_Course\\\\32. Managing a Component Tree Practice\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./components/App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 13\n}, this));\n\n//CHALLENGE: I have extracted the Input Area, including the <input> and\n//<button> elements into a seperate Component called InputArea.\n//Your job is to make the app work as it did before but this time with the\n//InputArea as a seperate Component.\n\n// DO NOT: Modify the ToDoItem.jsx\n// DO NOT: Move the input/button elements back into the App.jsx\n\n//Hint 1: You will need to think about how to manage the state of the input element\n//in InputArea.jsx.\n//Hint 2: You will need to think about how to pass the input value back into\n//the addItem() function in App.jsx.","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/loren/Desktop/React_Course/32. Managing a Component Tree Practice/src/index.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./components/App\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\nroot.render(<App />);\r\n\r\n//CHALLENGE: I have extracted the Input Area, including the <input> and\r\n//<button> elements into a seperate Component called InputArea.\r\n//Your job is to make the app work as it did before but this time with the\r\n//InputArea as a seperate Component.\r\n\r\n// DO NOT: Modify the ToDoItem.jsx\r\n// DO NOT: Move the input/button elements back into the App.jsx\r\n\r\n//Hint 1: You will need to think about how to manage the state of the input element\r\n//in InputArea.jsx.\r\n//Hint 2: You will need to think about how to pass the input value back into\r\n//the addItem() function in App.jsx."],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjEH,IAAI,CAACI,MAAM,cAACL,OAAA,CAACF,GAAG;EAAAQ,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;;AAEpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}